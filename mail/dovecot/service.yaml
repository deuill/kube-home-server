apiVersion: v1
kind: Service
metadata:
  name: dovecot
  namespace: mail
spec:
  type: NodePort
  selector:
    app: dovecot
  ports:
    - name: imap
      port: 143
      nodePort: 143
    - name: imaps
      port: 993
      nodePort: 993
---
apiVersion: v1
kind: Service
metadata:
  name: dovecot-lmtp
  namespace: mail
spec:
  selector:
    app: dovecot
  ports:
    - name: lmtp
      port: 24
---
apiVersion: v1
kind: Service
metadata:
  name: dovecot-sasl
  namespace: mail
spec:
  selector:
    app: dovecot
  ports:
    - name: sasl
      port: 3659
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: dovecot
  namespace: mail
data:
  90-sieve.conf: |
    protocol imap {
        mail_plugins = $mail_plugins imap_sieve
    }

    plugin {
        # Setup default plugins and extensions.
        sieve_plugins = sieve_imapsieve sieve_extprograms
        sieve_global_extensions = +vnd.dovecot.pipe +vnd.dovecot.environment
        sieve_pipe_bin_dir = /var/lib/dovecot/script

        # Read Sieve scripts from pre-defined directories.
        sieve_before = /etc/dovecot/sieve.before.d
        sieve_after = /etc/dovecot/sieve.after.d

        # From elsewhere to Junk folder.
        imapsieve_mailbox1_name = INBOX.Junk
        imapsieve_mailbox1_causes = COPY
        imapsieve_mailbox1_before = file:/var/lib/dovecot/sieve/learn-spam.sieve

        # From Junk folder to elsewhere.
        imapsieve_mailbox2_name = *
        imapsieve_mailbox2_from = INBOX.Junk
        imapsieve_mailbox2_causes = COPY
        imapsieve_mailbox2_before = file:/var/lib/dovecot/sieve/learn-ham.sieve
    }
  learn-ham.sieve: |
    require ["vnd.dovecot.pipe", "copy", "imapsieve", "environment", "variables"];

    if environment :matches "imap.mailbox" "*" {
        set "mailbox" "${1}";
    }

    if string :matches "${mailbox}" ["*/Trash", "Trash"] {
        stop;
    }

    pipe :copy "learn-rspamd.script" ["ham"];
  learn-spam.sieve: |
    require ["vnd.dovecot.pipe", "copy", "imapsieve", "environment", "variables", "imap4flags"];

    addflag "\\Seen";
    pipe :copy "learn-rspamd.script" ["spam"];
  learn-rspamd.script: |
    #!/bin/bash

    if test "${1}" != "ham" -a "${1}" != "spam"; then
        echo "Invalid action type '${1}', want 'ham' or 'spam'" >&2
        exit 1
    fi

    read PASSWORD < /etc/dovecot/rspamd/controller-password
    curl --silent -H "Deliver-To: ${USER}" -H "password: ${PASSWORD}" --data-binary @- "rspamd.mail.svc.cluster.local:11334/learn${1}"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dovecot
  namespace: mail
spec:
  selector:
    matchLabels:
      app: dovecot
  template:
    metadata:
      labels:
        app: dovecot
    spec:
      containers:
        - name: dovecot
          image: docker.deuill.org/mail/dovecot:2.3.4
          imagePullPolicy: Never
          env:
            - name: MAIL_HOSTNAME
              value: mail.deuill.org
            - name: DATABASE_HOST
              value: mariadb.default.svc.cluster.local
            - name: DATABASE_USER
              value: mail
            - name: DATABASE_NAME
              value: mail
            - name: DATABASE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mail-database
                  key: password
            - name: RSPAMD_CONTROLLER_HOST
              value: http://rspamd.mail.svc.cluster.local:11334
            - name: RSPAMD_CONTROLLER_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: rspamd-worker
                  key: controller-password
          ports:
            - containerPort: 24
            - containerPort: 143
            - containerPort: 993
            - containerPort: 3659
          volumeMounts:
            - name: mail
              mountPath: /var/mail
            - name: dovecot-config
              mountPath: /etc/dovecot/conf.d
            - name: rspamd
              mountPath: /etc/dovecot/rspamd
              readOnly: true
            - name: cert
              mountPath: /etc/ssl/private/mail.deuill.org
              readOnly: true
      volumes:
        - name: mail
          hostPath:
            path: /opt/kubernetes/mail/shared
        - name: dovecot-config
          configMap:
            name: dovecot
        - name: rspamd
          secret:
            secretName: rspamd-worker
        - name: cert
          secret:
            secretName: mail-deuill-org-certificate
